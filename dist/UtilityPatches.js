function R(o){window.enmity.plugins.registerPlugin(o)}const{components:e}=window.enmity;e.Alert,e.Button,e.FlatList,e.Image,e.ImageBackground,e.KeyboardAvoidingView,e.Modal,e.Pressable,e.RefreshControl;const N=e.ScrollView;e.SectionList,e.StatusBar,e.StyleSheet,e.Switch,e.Text,e.TextInput,e.TouchableHighlight,e.TouchableOpacity,e.TouchableWithoutFeedback,e.Touchable;const M=e.View;e.VirtualizedList,e.Form,e.FormArrow,e.FormCTA,e.FormCTAButton,e.FormCardSection,e.FormCheckbox;const I=e.FormDivider;e.FormHint,e.FormIcon,e.FormInput,e.FormLabel,e.FormRadio;const P=e.FormRow,E=e.FormSection;e.FormSelect,e.FormSubLabel;const L=e.FormSwitch;e.FormTernaryCheckBox,e.FormText,e.FormTextColors,e.FormTextSizes;const D=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const l=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage,window.enmity.modules.common.Toasts,window.enmity.modules.common.Dialog,window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack;const v=window.enmity.modules.common.Theme;window.enmity.modules.common.Linking,window.enmity.modules.common.StyleSheet,window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function A(o,t){return window.enmity.modules.getModule(o,t)}function w(...o){return window.enmity.modules.getByProps(...o)}function S(...o){return window.enmity.modules.getByName(...o)}window.enmity.modules.common;var V="UtilityPatches",k="1.1.5",B="Minor patches/fixes all bundled into a single plugin for convenience.",O="#ff0069",j=[{name:"Rosie<3",id:"581573474296791211"}],a={name:V,version:k,description:B,color:O,authors:j};function T(o,t,n){window.enmity.settings.set(o,t,n)}function y(o,t,n){return window.enmity.settings.get(o,t,n)}const d=o=>y(a.name,"settings",{})[o],x=(o,t)=>T(a.name,"settings",{...y(a.name,"settings",{}),[o]:t}),C={roleDot:{title:"Add Role Dots",subtitle:"Force-enables role-dots aswell with role-colors simultaneously disregarding your accessibility settings."},headerPrimary:{title:"Fix Text Labels",subtitle:"Forces all SettingRow and FormLabel Main text-labels use the 'text-normal' color instead of 'header-primary'."},mediaItems:{title:"Media Items",subtitle:o=>{var t;return`Changes the amount of media items per row to '${(t=o.value)!=null?t:y(a.name,"mediaItemsNumber",2)}' instead of the default '3' in new Media Picker experiment.`},custom:(o,t,n)=>{var i;const s=A(u=>u.render.name==="SliderComponent"),g=S("FormLabel"),{meta:{resolveSemanticColor:m}}=w("colors","meta"),{ThemeColorMap:{HEADER_PRIMARY:r,BACKGROUND_PRIMARY:h}}=D,p=(u,b)=>l.createElement(g,{text:u,style:{[`margin${b}`]:16,opacity:n?.5:1}}),f=1,F=10;return l.createElement(M,{style:{alignItems:"center",flexDirection:"row"}},p(f,"Left"),l.createElement(s,{value:(i=o.value)!=null?i:y(a.name,"mediaItemsNumber",2),minimumValue:f,maximumValue:F,style:{marginHorizontal:16,flex:1},minimumTrackTintColor:m(v.theme,r),maximumTrackTintColor:m(v.theme,h),step:1,onValueChange:u=>(t(b=>({...b,value:u})),T(a.name,"mediaItemsNumber",u)),disabled:n}),p(F,"Right"))}},jsonFix:{title:"Upload JSON Files",subtitle:"Fixes a long-lasting bug of Discord (where JSON files couldn't be uploaded) by changing the file's 'Mime-Type'."}},$=o=>{y(a.name,"settings",{})[o]===void 0&&x(o,!0)};var H=()=>l.createElement(N,null,l.createElement(E,{title:"Preferences"},Object.entries(C).map(([o,{title:t,subtitle:n,custom:i}],s,g)=>{var m;const[r,h]=l.useState({}),p=!d(o),f=(m=i==null?void 0:i(r,h,p))!=null?m:l.createElement(l.Fragment,null);return l.createElement(l.Fragment,null,l.createElement(P,{label:typeof t=="function"?t(r,h):t,subLabel:typeof n=="function"?n(r,h):n,trailing:()=>l.createElement(L,{value:d(o),onValueChange:F=>x(o,F)}),disabled:p}),f,s<g.length-1&&l.createElement(I,null))})));function J(o){return window.enmity.patcher.create(o)}function U(o,t,n){return window.enmity.utilities.findInReactTree(o,t,n)}const c=J("utils"),{NativeModules:{DCDChatManager:z}}=w("View","Text","NativeModules"),_=S("FormLabel",{default:!1}),{Text:G}=w("TextStyleSheet"),{getSettingTitle:K}=w("getSettingTitle"),Y=S("SettingsOverviewScreen",{default:!1}),W=w("addFiles","popFirstFile"),q=w("getNumMediaItemsPerRow"),Q={...a,onStart(){Object.keys(C).forEach(t=>$(t)),c.before(z,"updateRows",(t,n)=>{if(!d("roleDot"))return;const i=JSON.parse(n[1]);for(const s of i)s.type===1&&(s.message.shouldShowRoleDot=!0,s.message.shouldShowRoleOnName=!0);n[1]=JSON.stringify(i)}),c.after(_,"default",(t,n,i)=>{!d("headerPrimary")||(i.props.color="text-normal")});const o=c.after(Y,"default",(t,n,i)=>{o();const{sections:s}=U(i,m=>m.sections),g=s.map(m=>m.settings).reduce((m,r)=>[...m,...r],[]).map(m=>K(m));c.before(G,"render",(m,r)=>{!d("headerPrimary")||r[0].variant==="text-md/semibold"&&r[0].color==="header-primary"&&g.includes(r[0].children)&&(r[0].color="text-normal")})});c.instead(q,"getNumMediaItemsPerRow",(t,n,i)=>d("mediaItems")?y(a.name,"mediaItemsNumber",2):i.apply(t,n)),c.after(W,"addFiles",(t,n)=>{!d("jsonFix")||n[0].files.forEach(i=>{i.mimeType==="application/json"&&(i.mimeType="text/plain")})})},onStop(){c.unpatchAll()},getSettingsPanel(){return l.createElement(H,null)}};R(Q);
